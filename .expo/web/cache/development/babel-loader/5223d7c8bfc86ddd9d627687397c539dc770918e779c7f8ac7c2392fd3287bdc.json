{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Icon, Image } from 'react-native-elements';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Menu from \"./MenuComponent\";\nimport Dishdetail from \"./DishdetailComponent\";\nimport Home from \"./HomeComponent\";\nimport About from \"./AboutComponent\";\nimport Contact from \"./ContactComponent\";\nimport Favorites from \"./FavoriteComponent\";\nimport Register from \"./RegisterComponent\";\nfunction TabNavigatorScreen() {\n  var TabNavigator = createBottomTabNavigator();\n  return _jsxs(TabNavigator.Navigator, {\n    initialRouteName: \"Login\",\n    children: [_jsx(TabNavigator.Screen, {\n      name: \"Login\",\n      component: Login,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(Icon, {\n            name: \"sign-in\",\n            type: \"font-awesome\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(TabNavigator.Screen, {\n      name: \"Register\",\n      component: Register,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(Icon, {\n            name: \"user-plus\",\n            type: \"font-awesome\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nimport { connect } from 'react-redux';\nimport { fetchLeaders as _fetchLeaders, fetchDishes as _fetchDishes, fetchComments as _fetchComments, fetchPromos as _fetchPromos } from \"../redux/ActionCreators\";\nimport Reservation from \"./ReservationComponent\";\nfunction ReservationNavigatorScreen() {\n  var ReservationNavigator = createStackNavigator();\n  return _jsx(ReservationNavigator.Navigator, {\n    initialRouteName: \"Reservation\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#7cc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      }\n    },\n    children: _jsx(ReservationNavigator.Screen, {\n      name: \"Reservation\",\n      component: Reservation,\n      options: function options(_ref3) {\n        var navigation = _ref3.navigation;\n        return {\n          headerTitle: 'Reserve Table',\n          headerLeft: function headerLeft() {\n            return _jsx(Icon, {\n              name: \"menu\",\n              size: 36,\n              color: \"#fff\",\n              onPress: function onPress() {\n                return navigation.toggleDrawer();\n              }\n            });\n          }\n        };\n      }\n    })\n  });\n}\nimport Login from \"./LoginComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LoginNavigatorScreen() {\n  var LoginNavigator = createStackNavigator();\n  return _jsx(LoginNavigator.Navigator, {\n    initialRouteName: \"LoginRegister\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#7cc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      }\n    },\n    children: _jsx(LoginNavigator.Screen, {\n      name: \"LoginRegister\",\n      component: TabNavigatorScreen,\n      options: function options(_ref4) {\n        var navigation = _ref4.navigation;\n        return {\n          headerTitle: 'Login',\n          headerLeft: function headerLeft() {\n            return _jsx(Icon, {\n              name: \"menu\",\n              size: 36,\n              color: \"#fff\",\n              onPress: function onPress() {\n                return navigation.toggleDrawer();\n              }\n            });\n          }\n        };\n      }\n    })\n  });\n}\nfunction HomeNavigatorScreen() {\n  var HomeNavigator = createStackNavigator();\n  return _jsx(HomeNavigator.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#7cc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      }\n    },\n    children: _jsx(HomeNavigator.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: function options(_ref5) {\n        var navigation = _ref5.navigation;\n        return {\n          headerTitle: 'Home',\n          headerLeft: function headerLeft() {\n            return _jsx(Icon, {\n              name: \"menu\",\n              size: 36,\n              color: \"#fff\",\n              onPress: function onPress() {\n                return navigation.toggleDrawer();\n              }\n            });\n          }\n        };\n      }\n    })\n  });\n}\nfunction AboutNavigatorScreen() {\n  var AboutNavigator = createStackNavigator();\n  return _jsx(AboutNavigator.Navigator, {\n    initialRouteName: \"About\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#7cc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      }\n    },\n    children: _jsx(AboutNavigator.Screen, {\n      name: \"About\",\n      component: About,\n      options: function options(_ref6) {\n        var navigation = _ref6.navigation;\n        return {\n          headerTitle: 'About',\n          headerLeft: function headerLeft() {\n            return _jsx(Icon, {\n              name: \"menu\",\n              size: 36,\n              color: \"#fff\",\n              onPress: function onPress() {\n                return navigation.toggleDrawer();\n              }\n            });\n          }\n        };\n      }\n    })\n  });\n}\nfunction ContactNavigatorScreen() {\n  var ContactNavigator = createStackNavigator();\n  return _jsx(ContactNavigator.Navigator, {\n    initialRouteName: \"Contact\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#7cc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      }\n    },\n    children: _jsx(ContactNavigator.Screen, {\n      name: \"Contact\",\n      component: Contact,\n      options: function options(_ref7) {\n        var navigation = _ref7.navigation;\n        return {\n          headerTitle: 'Contact',\n          headerLeft: function headerLeft() {\n            return _jsx(Icon, {\n              name: \"menu\",\n              size: 36,\n              color: \"#fff\",\n              onPress: function onPress() {\n                return navigation.toggleDrawer();\n              }\n            });\n          }\n        };\n      }\n    })\n  });\n}\nfunction CustomDrawerContent(props) {\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: [_jsxs(View, {\n      style: {\n        backgroundColor: '#7cc',\n        height: 80,\n        alignItems: 'center',\n        flexDirection: 'row'\n      },\n      children: [_jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(Image, {\n          source: {\n            uri: baseUrl + 'images/logo.png'\n          },\n          style: {\n            margin: 10,\n            width: 80,\n            height: 60\n          }\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 2\n        },\n        children: _jsx(Text, {\n          style: {\n            color: '#fff',\n            fontSize: 22,\n            fontWeight: 'bold'\n          },\n          children: \"NguyenTQ\"\n        })\n      })]\n    }), _jsx(DrawerItemList, _objectSpread({}, props)), _jsx(DrawerItem, {\n      label: \"Help\",\n      icon: function icon(_ref8) {\n        var focused = _ref8.focused,\n          color = _ref8.color,\n          size = _ref8.size;\n        return _jsx(Icon, {\n          name: \"help\",\n          size: size,\n          color: focused ? '#7cc' : '#ccc'\n        });\n      },\n      onPress: function onPress() {\n        return Linking.openURL('https://reactnavigation.org/docs/getting-started');\n      }\n    })]\n  }));\n}\nfunction MainNavigatorScreen() {\n  var MainNavigator = createDrawerNavigator();\n  return _jsxs(MainNavigator.Navigator, {\n    initialRouteName: \"HomeScreen\",\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawerContent, _objectSpread({}, props));\n    },\n    children: [_jsx(MainNavigator.Screen, {\n      name: \"HomeScreen\",\n      component: HomeNavigatorScreen,\n      options: {\n        title: 'Home',\n        headerShown: false,\n        drawerIcon: function drawerIcon(_ref9) {\n          var focused = _ref9.focused,\n            size = _ref9.size;\n          return _jsx(Icon, {\n            name: \"home\",\n            size: size,\n            color: focused ? '#7cc' : '#ccc'\n          });\n        }\n      }\n    }), _jsx(MainNavigator.Screen, {\n      name: \"AboutScreen\",\n      component: AboutNavigatorScreen,\n      options: {\n        title: 'About Us',\n        headerShown: false,\n        drawerIcon: function drawerIcon(_ref10) {\n          var focused = _ref10.focused,\n            size = _ref10.size;\n          return _jsx(Icon, {\n            name: \"info\",\n            size: size,\n            color: focused ? '#7cc' : '#ccc'\n          });\n        }\n      }\n    }), _jsx(MainNavigator.Screen, {\n      name: \"MenuScreen\",\n      component: MenuNavigatorScreen,\n      options: {\n        title: 'Menu',\n        headerShown: false,\n        drawerIcon: function drawerIcon(_ref11) {\n          var focused = _ref11.focused,\n            size = _ref11.size;\n          return _jsx(Icon, {\n            name: \"menu\",\n            size: size,\n            color: focused ? '#7cc' : '#ccc'\n          });\n        }\n      }\n    }), _jsx(MainNavigator.Screen, {\n      name: \"ContactScreen\",\n      component: ContactNavigatorScreen,\n      options: {\n        title: 'Contact Us',\n        headerShown: false,\n        drawerIcon: function drawerIcon(_ref12) {\n          var focused = _ref12.focused,\n            size = _ref12.size;\n          return _jsx(Icon, {\n            name: \"contacts\",\n            size: size,\n            color: focused ? '#7cc' : '#ccc'\n          });\n        }\n      }\n    }), _jsx(MainNavigator.Screen, {\n      name: \"ReservationScreen\",\n      component: ReservationNavigatorScreen,\n      options: {\n        title: 'Reserve Table',\n        headerShown: false,\n        drawerIcon: function drawerIcon(_ref13) {\n          var focused = _ref13.focused,\n            size = _ref13.size;\n          return _jsx(Icon, {\n            name: \"cutlery\",\n            type: \"font-awesome\",\n            size: size,\n            color: focused ? '#7cc' : '#ccc'\n          });\n        }\n      }\n    }), _jsx(MainNavigator.Screen, {\n      name: \"FavoritesScreen\",\n      component: FavoritesNavigatorScreen,\n      options: {\n        title: 'My Favorites',\n        headerShown: false,\n        drawerIcon: function drawerIcon(_ref14) {\n          var focused = _ref14.focused,\n            size = _ref14.size;\n          return _jsx(Icon, {\n            name: \"heart\",\n            type: \"font-awesome\",\n            size: size,\n            color: focused ? '#7cc' : '#ccc'\n          });\n        }\n      }\n    }), _jsx(MainNavigator.Screen, {\n      name: \"LoginScreen\",\n      component: LoginNavigatorScreen,\n      options: {\n        title: 'Login',\n        headerShown: false,\n        drawerIcon: function drawerIcon(_ref15) {\n          var focused = _ref15.focused,\n            size = _ref15.size;\n          return _jsx(Icon, {\n            name: \"sign-in\",\n            type: \"font-awesome\",\n            size: size,\n            color: focused ? '#7cc' : '#ccc'\n          });\n        }\n      }\n    })]\n  });\n}\nfunction MenuNavigatorScreen() {\n  var MenuNavigator = createStackNavigator();\n  return _jsxs(MenuNavigator.Navigator, {\n    initialRouteName: \"Menu\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#7cc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      }\n    },\n    children: [_jsx(MenuNavigator.Screen, {\n      name: \"Menu\",\n      component: Menu,\n      options: function options(_ref16) {\n        var navigation = _ref16.navigation;\n        return {\n          headerTitle: 'Menu',\n          headerLeft: function headerLeft() {\n            return _jsx(Icon, {\n              name: \"menu\",\n              size: 36,\n              color: \"#fff\",\n              onPress: function onPress() {\n                return navigation.toggleDrawer();\n              }\n            });\n          }\n        };\n      }\n    }), _jsx(MenuNavigator.Screen, {\n      name: \"Dishdetail\",\n      component: Dishdetail,\n      options: {\n        headerTitle: 'Dish Detail'\n      }\n    })]\n  });\n}\nfunction FavoritesNavigatorScreen() {\n  var FavoritesNavigator = createStackNavigator();\n  return _jsxs(FavoritesNavigator.Navigator, {\n    initialRouteName: \"Favorites\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#7cc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      }\n    },\n    children: [_jsx(FavoritesNavigator.Screen, {\n      name: \"Favorites\",\n      component: Favorites,\n      options: function options(_ref17) {\n        var navigation = _ref17.navigation;\n        return {\n          headerTitle: 'My Favorites',\n          headerLeft: function headerLeft() {\n            return _jsx(Icon, {\n              name: \"menu\",\n              size: 36,\n              color: \"#fff\",\n              onPress: function onPress() {\n                return navigation.toggleDrawer();\n              }\n            });\n          }\n        };\n      }\n    }), _jsx(FavoritesNavigator.Screen, {\n      name: \"Dishdetail\",\n      component: Dishdetail,\n      options: {\n        headerTitle: 'Dish Detail'\n      }\n    })]\n  });\n}\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchLeaders: function fetchLeaders() {\n      return dispatch(_fetchLeaders());\n    },\n    fetchDishes: function fetchDishes() {\n      return dispatch(_fetchDishes());\n    },\n    fetchComments: function fetchComments() {\n      return dispatch(_fetchComments());\n    },\n    fetchPromos: function fetchPromos() {\n      return dispatch(_fetchPromos());\n    }\n  };\n};\nvar Main = function (_Component) {\n  _inherits(Main, _Component);\n  var _super = _createSuper(Main);\n  function Main() {\n    _classCallCheck(this, Main);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: _jsx(MainNavigatorScreen, {})\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchLeaders();\n      this.props.fetchDishes();\n      this.props.fetchComments();\n      this.props.fetchPromos();\n    }\n  }]);\n  return Main;\n}(Component);\nexport default connect(null, mapDispatchToProps)(Main);","map":{"version":3,"names":["React","Component","NavigationContainer","createStackNavigator","View","Text","Linking","Icon","Image","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","baseUrl","createBottomTabNavigator","Menu","Dishdetail","Home","About","Contact","Favorites","Register","TabNavigatorScreen","TabNavigator","_jsxs","Navigator","initialRouteName","children","_jsx","Screen","name","component","Login","options","headerShown","tabBarIcon","_ref","color","size","type","_ref2","connect","fetchLeaders","fetchDishes","fetchComments","fetchPromos","Reservation","ReservationNavigatorScreen","ReservationNavigator","screenOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","_ref3","navigation","headerTitle","headerLeft","onPress","toggleDrawer","jsx","jsxs","LoginNavigatorScreen","LoginNavigator","_ref4","HomeNavigatorScreen","HomeNavigator","_ref5","AboutNavigatorScreen","AboutNavigator","_ref6","ContactNavigatorScreen","ContactNavigator","_ref7","CustomDrawerContent","props","_objectSpread","style","height","alignItems","flexDirection","flex","source","uri","margin","width","fontSize","fontWeight","label","icon","_ref8","focused","openURL","MainNavigatorScreen","MainNavigator","drawerContent","title","drawerIcon","_ref9","_ref10","MenuNavigatorScreen","_ref11","_ref12","_ref13","FavoritesNavigatorScreen","_ref14","_ref15","MenuNavigator","_ref16","FavoritesNavigator","_ref17","mapDispatchToProps","dispatch","Main","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","componentDidMount"],"sources":["D:/mobile/NguyenTQ/components/MainComponent.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { View, Text, Linking } from 'react-native';\r\nimport { Icon, Image } from 'react-native-elements';\r\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Menu from './MenuComponent';\r\nimport Dishdetail from './DishdetailComponent';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport Favorites from './FavoriteComponent';\r\nimport Register from './RegisterComponent';\r\n\r\nfunction TabNavigatorScreen() {\r\n  const TabNavigator = createBottomTabNavigator();\r\n  return (\r\n    <TabNavigator.Navigator initialRouteName='Login'>\r\n      <TabNavigator.Screen name='Login' component={Login}\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (<Icon name='sign-in' type='font-awesome' size={size} color={color} />)\r\n        }} />\r\n      <TabNavigator.Screen name='Register' component={Register}\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (<Icon name='user-plus' type='font-awesome' size={size} color={color} />)\r\n        }} />\r\n    </TabNavigator.Navigator>\r\n  );\r\n}\r\n\r\n// redux\r\nimport { connect } from 'react-redux';\r\nimport { fetchLeaders, fetchDishes, fetchComments, fetchPromos } from '../redux/ActionCreators';\r\n\r\n//Reservation\r\nimport Reservation from './ReservationComponent';\r\nfunction ReservationNavigatorScreen() {\r\n  const ReservationNavigator = createStackNavigator();\r\n  return (\r\n    <ReservationNavigator.Navigator initialRouteName='Reservation'\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: '#7cc' },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: { color: '#fff' }\r\n      }}>\r\n      <ReservationNavigator.Screen name='Reservation' component={Reservation}\r\n        options={({ navigation }) => ({\r\n          headerTitle: 'Reserve Table',\r\n          headerLeft: () => (<Icon name='menu' size={36} color='#fff' onPress={() => navigation.toggleDrawer()} />)\r\n        })} />\r\n    </ReservationNavigator.Navigator>\r\n  );\r\n}\r\n//Login\r\nimport Login from './LoginComponent';\r\nfunction LoginNavigatorScreen() {\r\n  const LoginNavigator = createStackNavigator();\r\n  return (\r\n    <LoginNavigator.Navigator initialRouteName='LoginRegister'\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: '#7cc' },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: { color: '#fff' }\r\n      }}>\r\n      <LoginNavigator.Screen name='LoginRegister' component={TabNavigatorScreen}\r\n        options={({ navigation }) => ({\r\n          headerTitle: 'Login',\r\n          headerLeft: () => (<Icon name='menu' size={36} color='#fff' onPress={() => navigation.toggleDrawer()} />)\r\n        })} />\r\n    </LoginNavigator.Navigator>\r\n  );\r\n}\r\nfunction HomeNavigatorScreen() {\r\n  const HomeNavigator = createStackNavigator();\r\n  return (\r\n    <HomeNavigator.Navigator\r\n      initialRouteName='Home'\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: '#7cc' },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: { color: '#fff' }\r\n      }}>\r\n      <HomeNavigator.Screen name='Home' component={Home} \r\n      options={({ navigation }) => ({\r\n          headerTitle: 'Home',\r\n          headerLeft: () => (<Icon name='menu' size={36} color='#fff' onPress={() => navigation.toggleDrawer()} />)\r\n        })} />\r\n    </HomeNavigator.Navigator>  \r\n  );\r\n}\r\n\r\nfunction AboutNavigatorScreen() {\r\n  const AboutNavigator = createStackNavigator();\r\n  return (\r\n    <AboutNavigator.Navigator initialRouteName='About'\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: '#7cc' },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: { color: '#fff' }\r\n      }}>\r\n      <AboutNavigator.Screen name='About' component={About} \r\n      options={({ navigation }) => ({\r\n        headerTitle: 'About',\r\n        headerLeft: () => (<Icon name='menu' size={36} color='#fff' onPress={() => navigation.toggleDrawer()} />)\r\n      })}/>\r\n    </AboutNavigator.Navigator>\r\n  );\r\n}\r\n\r\n\r\nfunction ContactNavigatorScreen() {\r\n  const ContactNavigator = createStackNavigator();\r\n  return (\r\n    <ContactNavigator.Navigator initialRouteName='Contact'\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: '#7cc' },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: { color: '#fff' }\r\n      }}>\r\n      <ContactNavigator.Screen name='Contact' component={Contact}\r\n        options={({ navigation }) => ({\r\n          headerTitle: 'Contact',\r\n          headerLeft: () => (<Icon name='menu' size={36} color='#fff' onPress={() => navigation.toggleDrawer()} />)\r\n        })} />\r\n    </ContactNavigator.Navigator>\r\n  );\r\n}\r\n\r\nfunction CustomDrawerContent(props) {\r\n  return (\r\n    <DrawerContentScrollView {...props}>\r\n      <View style={{ backgroundColor: '#7cc', height: 80, alignItems: 'center', flexDirection: 'row' }}>\r\n        <View style={{ flex: 1 }}>\r\n        <Image source={{ uri: baseUrl + 'images/logo.png' }} style={{ margin: 10, width: 80, height: 60 }} />\r\n        </View>\r\n        <View style={{ flex: 2 }}>\r\n          <Text style={{ color: '#fff', fontSize: 22, fontWeight: 'bold' }}>NguyenTQ</Text>\r\n        </View>\r\n      </View>\r\n      <DrawerItemList {...props} />\r\n      <DrawerItem label='Help'\r\n        icon={({ focused, color, size }) => <Icon name='help' size={size} color={focused ? '#7cc' : '#ccc'} />}\r\n        onPress={() => Linking.openURL('https://reactnavigation.org/docs/getting-started')} />\r\n    </DrawerContentScrollView>\r\n  );\r\n}\r\n\r\n\r\nfunction MainNavigatorScreen() {\r\n  const MainNavigator = createDrawerNavigator();\r\n  return (\r\n    <MainNavigator.Navigator initialRouteName='HomeScreen' drawerContent={(props) => <CustomDrawerContent {...props} />}>\r\n      <MainNavigator.Screen name='HomeScreen' component={HomeNavigatorScreen}\r\n        options={{\r\n          title: 'Home', headerShown: false,\r\n          drawerIcon: ({ focused, size }) => (<Icon name='home' size={size} color={focused ? '#7cc' : '#ccc'} />)\r\n        }} />\r\n      <MainNavigator.Screen name='AboutScreen' component={AboutNavigatorScreen}\r\n        options={{\r\n          title: 'About Us', headerShown: false,\r\n          drawerIcon: ({ focused, size }) => (<Icon name='info' size={size} color={focused ? '#7cc' : '#ccc'} />)\r\n        }} />\r\n      <MainNavigator.Screen name='MenuScreen' component={MenuNavigatorScreen}\r\n        options={{\r\n          title: 'Menu', headerShown: false,\r\n          drawerIcon: ({ focused, size }) => (<Icon name='menu' size={size} color={focused ? '#7cc' : '#ccc'} />)\r\n        }} />\r\n      <MainNavigator.Screen name='ContactScreen' component={ContactNavigatorScreen}\r\n        options={{\r\n          title: 'Contact Us', headerShown: false,\r\n          drawerIcon: ({ focused, size }) => (<Icon name='contacts' size={size} color={focused ? '#7cc' : '#ccc'} />)\r\n        }} />\r\n      <MainNavigator.Screen name='ReservationScreen' component={ReservationNavigatorScreen}\r\n        options={{\r\n          title: 'Reserve Table', headerShown: false,\r\n          drawerIcon: ({ focused, size }) => (<Icon name='cutlery' type='font-awesome' size={size} color={focused ? '#7cc' : '#ccc'} />)\r\n        }} />\r\n      <MainNavigator.Screen name='FavoritesScreen' component={FavoritesNavigatorScreen}\r\n        options={{\r\n          title: 'My Favorites', headerShown: false,\r\n          drawerIcon: ({ focused, size }) => (<Icon name='heart' type='font-awesome' size={size} color={focused ? '#7cc' : '#ccc'} />)\r\n        }} />\r\n         <MainNavigator.Screen name='LoginScreen' component={LoginNavigatorScreen}\r\n        options={{\r\n          title: 'Login', headerShown: false,\r\n          drawerIcon: ({ focused, size }) => (<Icon name='sign-in' type='font-awesome' size={size} color={focused ? '#7cc' : '#ccc'} />)\r\n        }} />\r\n    </MainNavigator.Navigator>\r\n  );  \r\n}\r\n\r\nfunction MenuNavigatorScreen() {\r\n  const MenuNavigator = createStackNavigator();\r\n  return (\r\n    <MenuNavigator.Navigator\r\n      initialRouteName='Menu'\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: '#7cc' },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: { color: '#fff' }\r\n      }}>\r\n      <MenuNavigator.Screen name='Menu' component={Menu}\r\n        options={({ navigation }) => ({\r\n          headerTitle: 'Menu',\r\n          headerLeft: () => (<Icon name='menu' size={36} color='#fff' onPress={() => navigation.toggleDrawer()} />)\r\n        })} />\r\n      <MenuNavigator.Screen name='Dishdetail' component={Dishdetail}\r\n        options={{\r\n          headerTitle: 'Dish Detail'\r\n        }} />\r\n    </MenuNavigator.Navigator>\r\n  );\r\n}\r\n\r\nfunction FavoritesNavigatorScreen() {\r\n  const FavoritesNavigator = createStackNavigator();\r\n  return (\r\n    <FavoritesNavigator.Navigator initialRouteName='Favorites'\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: '#7cc' },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: { color: '#fff' }\r\n      }}>\r\n      <FavoritesNavigator.Screen name='Favorites' component={Favorites}\r\n        options={({ navigation }) => ({\r\n          headerTitle: 'My Favorites',\r\n          headerLeft: () => (<Icon name='menu' size={36} color='#fff' onPress={() => navigation.toggleDrawer()} />)\r\n        })} />\r\n      <FavoritesNavigator.Screen name='Dishdetail' component={Dishdetail}\r\n        options={{ headerTitle: 'Dish Detail' }} />\r\n    </FavoritesNavigator.Navigator>\r\n  );\r\n}\r\n\r\n\r\n//redux \r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  fetchDishes: () => dispatch(fetchDishes()),\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos())\r\n});\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <NavigationContainer>\r\n        <MainNavigatorScreen />\r\n      </NavigationContainer>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    // redux\r\n    this.props.fetchLeaders();\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Main);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}